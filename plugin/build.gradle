apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.vanniktech.maven.publish'

@SuppressWarnings("GroovyUnusedDeclaration")
def getRepositoryUsername() {
    return hasProperty('NEXUS_USERNAME') ? NEXUS_USERNAME : ""
}

@SuppressWarnings("GroovyUnusedDeclaration")
def getRepositoryPassword() {
    return hasProperty('NEXUS_PASSWORD') ? NEXUS_PASSWORD : ""
}

android {
    buildToolsVersion rootProject.buildToolsVersion
    compileSdkVersion rootProject.compileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.sdkVersion
        versionCode Integer.parseInt(VERSION_CODE)
        versionName VERSION_NAME

        testInstrumentationRunner "androidx.testgetRepositoryPassword().runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
        }
    }
}

androidExtensions {
    experimental = true
}

mavenPublish {
    targets {
        uploadArchives {
            releaseRepositoryUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            snapshotRepositoryUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
            repositoryUsername = getRepositoryUsername()
            repositoryPassword = getRepositoryPassword()
        }
    }
}

dependencies {
    api 'androidx.core:core-ktx:1.0.1'
    api 'com.google.android.material:material:1.1.0-alpha05'
    api "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"
    testImplementation "junit:junit:$junitVersion"
    androidTestImplementation "androidx.test:runner:$androidTestVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$androidEspressoVersion"
}
repositories {
    mavenCentral()
}
